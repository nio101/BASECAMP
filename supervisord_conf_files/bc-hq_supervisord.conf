[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[inet_http_server]          ; inet (TCP) server disabled by default
port=*:9001      ; (ip_address:port specifier, *:port for all iface)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
identifier=supervisor_bc-hq       ; (supervisord identifier, default is 'supervisor')

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:MUTA_operator]
command=/usr/bin/python ./MUTA_operator.py           ; the program (relative uses PATH, can take args)
directory=/home/nio/MUTA_interface              ; directory to cwd to before exec (def no cwd)
user=nio                   			; setuid to this UNIX account to run the program
redirect_stderr=true
startsecs=1
startretries=3
autorestart=true

[program:scheduler]
command=/usr/bin/python3 ./scheduler.py          ; the program (relative uses PATH, can take args)
directory=/home/nio/scheduler          ; directory to cwd to before exec (def no cwd)
user=nio                                        ; setuid to this UNIX account to run the program
redirect_stderr=true
startsecs=1
startretries=3
autorestart=true
