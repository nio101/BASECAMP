/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
@-webkit-keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }
@keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@-webkit-keyframes mdc-ripple-fg-opacity-in {
  from {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    opacity: 0; }
  to {
    opacity: var(--mdc-ripple-fg-opacity, 0.16); } }

@keyframes mdc-ripple-fg-opacity-in {
  from {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    opacity: 0; }
  to {
    opacity: var(--mdc-ripple-fg-opacity, 0.16); } }

@-webkit-keyframes mdc-ripple-fg-opacity-out {
  from {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    opacity: var(--mdc-ripple-fg-opacity, 0.16); }
  to {
    opacity: 0; } }

@keyframes mdc-ripple-fg-opacity-out {
  from {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    opacity: var(--mdc-ripple-fg-opacity, 0.16); }
  to {
    opacity: 0; } }

.mdc-ripple-surface--test-edge-var-bug {
  --mdc-ripple-surface-test-edge-var: 1px solid #000;
  visibility: hidden; }
  .mdc-ripple-surface--test-edge-var-bug::before {
    border: var(--mdc-ripple-surface-test-edge-var); }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
:root {
  --mdc-theme-primary: #212121;
  --mdc-theme-primary-light: #686868;
  --mdc-theme-primary-dark: #454545;
  --mdc-theme-secondary: #64dd17;
  --mdc-theme-secondary-light: #8ced4f;
  --mdc-theme-secondary-dark: #479c10;
  --mdc-theme-background: #fff;
  --mdc-theme-text-primary-on-primary: white;
  --mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);
  --mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-primary-on-primary-light: white;
  --mdc-theme-text-secondary-on-primary-light: rgba(255, 255, 255, 0.7);
  --mdc-theme-text-hint-on-primary-light: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-disabled-on-primary-light: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-icon-on-primary-light: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-primary-on-primary-dark: white;
  --mdc-theme-text-secondary-on-primary-dark: rgba(255, 255, 255, 0.7);
  --mdc-theme-text-hint-on-primary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-disabled-on-primary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-icon-on-primary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-primary-on-secondary: rgba(0, 0, 0, 0.87);
  --mdc-theme-text-secondary-on-secondary: rgba(0, 0, 0, 0.54);
  --mdc-theme-text-hint-on-secondary: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-disabled-on-secondary: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-icon-on-secondary: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-primary-on-secondary-light: rgba(0, 0, 0, 0.87);
  --mdc-theme-text-secondary-on-secondary-light: rgba(0, 0, 0, 0.54);
  --mdc-theme-text-hint-on-secondary-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-disabled-on-secondary-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-icon-on-secondary-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-primary-on-secondary-dark: white;
  --mdc-theme-text-secondary-on-secondary-dark: rgba(255, 255, 255, 0.7);
  --mdc-theme-text-hint-on-secondary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-disabled-on-secondary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-icon-on-secondary-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);
  --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);
  --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);
  --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);
  --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);
  --mdc-theme-text-primary-on-dark: white;
  --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);
  --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);
  --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }

.mdc-theme--background {
  /* @alternate */
  background-color: #fff;
  background-color: var(--mdc-theme-background, #fff); }

.mdc-theme--primary {
  /* @alternate */
  color: #212121 !important;
  color: var(--mdc-theme-primary, #212121) !important; }

.mdc-theme--primary-light {
  /* @alternate */
  color: #686868 !important;
  color: var(--mdc-theme-primary-light, #686868) !important; }

.mdc-theme--primary-dark {
  /* @alternate */
  color: #454545 !important;
  color: var(--mdc-theme-primary-dark, #454545) !important; }

.mdc-theme--secondary {
  /* @alternate */
  color: #64dd17 !important;
  color: var(--mdc-theme-secondary, #64dd17) !important; }

.mdc-theme--secondary-light {
  /* @alternate */
  color: #8ced4f !important;
  color: var(--mdc-theme-secondary-light, #8ced4f) !important; }

.mdc-theme--secondary-dark {
  /* @alternate */
  color: #479c10 !important;
  color: var(--mdc-theme-secondary-dark, #479c10) !important; }

.mdc-theme--text-primary-on-primary {
  /* @alternate */
  color: white !important;
  color: var(--mdc-theme-text-primary-on-primary, white) !important; }

.mdc-theme--text-secondary-on-primary {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-primary-light {
  /* @alternate */
  color: white !important;
  color: var(--mdc-theme-text-primary-on-primary-light, white) !important; }

.mdc-theme--text-secondary-on-primary-light {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-primary-light, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary-light {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-primary-light, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary-light {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-primary-light, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary-light {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-primary-light, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-primary-dark {
  /* @alternate */
  color: white !important;
  color: var(--mdc-theme-text-primary-on-primary-dark, white) !important; }

.mdc-theme--text-secondary-on-primary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-primary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-secondary {
  /* @alternate */
  color: rgba(0, 0, 0, 0.87) !important;
  color: var(--mdc-theme-text-primary-on-secondary, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-secondary {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54) !important;
  color: var(--mdc-theme-text-secondary-on-secondary, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-secondary {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-secondary {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-secondary {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-secondary-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.87) !important;
  color: var(--mdc-theme-text-primary-on-secondary-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-secondary-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54) !important;
  color: var(--mdc-theme-text-secondary-on-secondary-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-secondary-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-secondary-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-secondary-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-secondary-dark {
  /* @alternate */
  color: white !important;
  color: var(--mdc-theme-text-primary-on-secondary-dark, white) !important; }

.mdc-theme--text-secondary-on-secondary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-secondary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-secondary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-secondary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-secondary-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-background {
  /* @alternate */
  color: rgba(0, 0, 0, 0.87) !important;
  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-background {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54) !important;
  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-background {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-background {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-background {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.87) !important;
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54) !important;
  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-light {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38) !important;
  color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-dark {
  /* @alternate */
  color: white !important;
  color: var(--mdc-theme-text-primary-on-dark, white) !important; }

.mdc-theme--text-secondary-on-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7) !important;
  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-dark {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5) !important;
  color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--primary-bg {
  /* @alternate */
  background-color: #212121 !important;
  background-color: var(--mdc-theme-primary, #212121) !important; }

.mdc-theme--primary-light-bg {
  /* @alternate */
  background-color: #686868 !important;
  background-color: var(--mdc-theme-primary-light, #686868) !important; }

.mdc-theme--primary-dark-bg {
  /* @alternate */
  background-color: #454545 !important;
  background-color: var(--mdc-theme-primary-dark, #454545) !important; }

.mdc-theme--secondary-bg {
  /* @alternate */
  background-color: #64dd17 !important;
  background-color: var(--mdc-theme-secondary, #64dd17) !important; }

.mdc-theme--secondary-light-bg {
  /* @alternate */
  background-color: #8ced4f !important;
  background-color: var(--mdc-theme-secondary-light, #8ced4f) !important; }

.mdc-theme--secondary-dark-bg {
  /* @alternate */
  background-color: #479c10 !important;
  background-color: var(--mdc-theme-secondary-dark, #479c10) !important; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/**
 * Applies styles to the different types of icons that can exist in toolbars.
 * Both .mdc-toolbar__icon and .mdc-toolbar__menu-icon share all styles except for
 * horizontal padding.
 */
.mdc-toolbar {
  /* @alternate */
  background-color: #212121;
  background-color: var(--mdc-theme-primary, #212121);
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-primary, white);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 100%; }
  .mdc-toolbar__row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    width: 100%;
    height: auto;
    min-height: 64px; }
    @media (max-width: 959px) and (orientation: landscape) {
      .mdc-toolbar__row {
        min-height: 48px; } }
    @media (max-width: 599px) {
      .mdc-toolbar__row {
        min-height: 56px; } }
  .mdc-toolbar__section {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    min-width: 0;
    height: 100%;
    z-index: 1; }
    .mdc-toolbar__section--align-start {
      -webkit-box-pack: start;
          -ms-flex-pack: start;
              justify-content: flex-start;
      -webkit-box-ordinal-group: 0;
          -ms-flex-order: -1;
              order: -1; }
    .mdc-toolbar__section--align-end {
      -webkit-box-pack: end;
          -ms-flex-pack: end;
              justify-content: flex-end;
      -webkit-box-ordinal-group: 2;
          -ms-flex-order: 1;
              order: 1; }
  .mdc-toolbar__title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1.25rem;
    font-weight: 500;
    letter-spacing: 0.02em;
    line-height: 2rem;
    text-decoration: inherit;
    text-transform: inherit;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    margin-left: 24px;
    margin-right: 0;
    -ms-flex-item-align: center;
        align-self: center;
    padding: 16px 0;
    line-height: 1.5rem;
    z-index: 1; }
    [dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] {
      margin-left: 0;
      margin-right: 24px; }
  .mdc-toolbar__icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    padding: 16px;
    border: none;
    background-color: inherit;
    color: inherit;
    text-decoration: none;
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-primary, white);
    padding-right: 12px;
    padding-left: 12px;
    cursor: pointer; }
  .mdc-toolbar__icon:last-of-type {
    padding-left: 12px;
    padding-right: 24px; }
    [dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] {
      padding-left: 24px;
      padding-right: 12px; }
  .mdc-toolbar__menu-icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    padding: 16px;
    border: none;
    background-color: inherit;
    color: inherit;
    text-decoration: none;
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-primary, white);
    padding-right: 24px;
    padding-left: 24px;
    cursor: pointer; }

.mdc-toolbar__menu-icon + .mdc-toolbar__title {
  margin-left: 8px;
  margin-right: 0; }
  [dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] {
    margin-left: 0;
    margin-right: 8px; }

@media (max-width: 599px) {
  .mdc-toolbar__title {
    margin-left: 16px;
    margin-right: 0; }
    [dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] {
      margin-left: 0;
      margin-right: 16px; }
  .mdc-toolbar__icon {
    padding-right: 8px;
    padding-left: 8px; }
  .mdc-toolbar__icon:last-of-type {
    padding-left: 8px;
    padding-right: 16px; }
    [dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] {
      padding-left: 16px;
      padding-right: 8px; }
  .mdc-toolbar__menu-icon {
    padding-right: 16px;
    padding-left: 16px; }
  .mdc-toolbar__menu-icon + .mdc-toolbar__title {
    margin-left: 16px;
    margin-right: 0; }
    [dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] {
      margin-left: 0;
      margin-right: 16px; } }

.mdc-toolbar--fixed {
  -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 4; }

.mdc-toolbar--flexible {
  --mdc-toolbar-ratio-to-extend-flexible: 4; }
  .mdc-toolbar--flexible .mdc-toolbar__row:first-child {
    height: 256px;
    height: calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); }
    @media (max-width: 599px) {
      .mdc-toolbar--flexible .mdc-toolbar__row:first-child {
        height: 224px;
        height: calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); } }
    .mdc-toolbar--flexible .mdc-toolbar__row:first-child::after {
      position: absolute;
      content: ""; }
  .mdc-toolbar--flexible-default-behavior .mdc-toolbar__title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 2.125rem;
    font-weight: 400;
    letter-spacing: normal;
    line-height: 2.5rem;
    text-decoration: inherit;
    text-transform: inherit;
    -ms-flex-item-align: end;
        align-self: flex-end;
    line-height: 1.5rem; }
  .mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child::after {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-transition: opacity .2s ease;
    transition: opacity .2s ease;
    opacity: 1; }
  .mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child::after {
    opacity: 0; }
  .mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title {
    font-weight: 500; }

.mdc-toolbar--waterfall.mdc-toolbar--fixed {
  -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
          box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow; }
  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }
  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }

.mdc-toolbar-fixed-adjust {
  margin-top: 64px; }
  @media (max-width: 959px) and (max-height: 599px) {
    .mdc-toolbar-fixed-adjust {
      margin-top: 48px; } }
  @media (max-width: 599px) {
    .mdc-toolbar-fixed-adjust {
      margin-top: 56px; } }

.mdc-toolbar__section--shrink-to-fit {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none; }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-typography {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

.mdc-typography--display4 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 7rem;
  font-weight: 300;
  letter-spacing: -0.04em;
  line-height: 7rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display4 {
  margin: -1rem 0 3.5rem -0.085em; }

.mdc-typography--display3 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 3.5rem;
  font-weight: 400;
  letter-spacing: -0.02em;
  line-height: 3.5rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display3 {
  margin: -8px 0 64px -0.07em; }

.mdc-typography--display2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 2.813rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 3rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display2 {
  margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--display1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 2.125rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 2.5rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display1 {
  margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--headline {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.5rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--headline {
  margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--title {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.25rem;
  font-weight: 500;
  letter-spacing: 0.02em;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--title {
  margin: -0.5rem 0 1rem -0.05em; }

.mdc-typography--subheading2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.75rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading2 {
  margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--subheading1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.938rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading1 {
  margin: -0.313rem 0 0.813rem -0.06em; }

.mdc-typography--body2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body2 {
  margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--body1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body1 {
  margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--caption {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.75rem;
  font-weight: 400;
  letter-spacing: 0.08em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--caption {
  margin: -0.5rem 0 1rem -0.04em; }

.mdc-typography--button {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 2.25rem;
  text-decoration: none;
  text-transform: uppercase; }

.mdc-typography--adjust-margin.mdc-typography--button {
  margin: inherit; }

fieldset {
  margin: 0;
  padding: 0;
  border: 0; }

.mdc-toolbar a {
  color: #f0f0f0;
  text-decoration: none; }

.mdc-button--theme-dark:not(:disabled),
.mdc-theme--dark .mdc-button:not(:disabled) {
  color: #b2ff59; }

.mdc-button--theme-dark::before, .mdc-button--theme-dark::after,
.mdc-theme--dark .mdc-button::before,
.mdc-theme--dark .mdc-button::after {
  background-color: #b2ff59; }

.mdc-button--theme-dark:hover::before,
.mdc-theme--dark .mdc-button:hover::before {
  opacity: 0.08; }

.mdc-button--theme-dark:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-focused::before {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.24; }

.mdc-button--theme-dark:not(.mdc-ripple-upgraded)::after,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded)::after {
  -webkit-transition: opacity 150ms linear;
  transition: opacity 150ms linear; }

.mdc-button--theme-dark:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):active::after {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.32; }

.mdc-button--theme-dark.mdc-ripple-upgraded,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded {
  --mdc-ripple-fg-opacity: 0.32; }

.mdc-button--theme-dark.mdc-button--raised:not(:disabled), .mdc-button--unelevated:not(:disabled),
.mdc-theme--dark .mdc-button--raised:not(:disabled),
.mdc-theme--dark
.mdc-button--unelevated:not(:disabled) {
  background-color: #b2ff59; }

.mdc-button--theme-dark.mdc-button--raised:not(:disabled), .mdc-button--unelevated:not(:disabled),
.mdc-theme--dark .mdc-button--raised:not(:disabled),
.mdc-theme--dark
.mdc-button--unelevated:not(:disabled) {
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }

.mdc-button--theme-dark.mdc-button--raised::before, .mdc-button--theme-dark.mdc-button--raised::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after,
.mdc-theme--dark .mdc-button--raised::before,
.mdc-theme--dark .mdc-button--raised::after,
.mdc-theme--dark
.mdc-button--unelevated::before,
.mdc-theme--dark
.mdc-button--unelevated::after {
  /* @alternate */
  background-color: rgba(0, 0, 0, 0.87); }
  @supports not (-ms-ime-align: auto) {
    .mdc-button--theme-dark.mdc-button--raised::before, .mdc-button--theme-dark.mdc-button--raised::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after,
    .mdc-theme--dark .mdc-button--raised::before,
    .mdc-theme--dark .mdc-button--raised::after,
    .mdc-theme--dark
    .mdc-button--unelevated::before,
    .mdc-theme--dark
    .mdc-button--unelevated::after {
      background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); } }

.mdc-button--theme-dark.mdc-button--raised:hover::before, .mdc-button--unelevated:hover::before,
.mdc-theme--dark .mdc-button--raised:hover::before,
.mdc-theme--dark
.mdc-button--unelevated:hover::before {
  opacity: 0.04; }

.mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded--background-focused::before, .mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before, .mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark
.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark
.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.12; }

.mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded)::after, .mdc-button--unelevated:not(.mdc-ripple-upgraded)::after,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded)::after,
.mdc-theme--dark
.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {
  -webkit-transition: opacity 150ms linear;
  transition: opacity 150ms linear; }

.mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded):active::after, .mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark
.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.16; }

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded, .mdc-button--unelevated.mdc-ripple-upgraded,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded,
.mdc-theme--dark
.mdc-button--unelevated.mdc-ripple-upgraded {
  --mdc-ripple-fg-opacity: 0.16; }

.mdc-button--theme-dark.mdc-button--stroked:not(:disabled),
.mdc-theme--dark .mdc-button--stroked:not(:disabled) {
  border-color: #b2ff59; }

.catalog-title {
  font-family: "Roboto Mono", monospace; }

.catalog-logo,
.catalog-back {
  padding-right: 24px;
  color: #eee;
  text-decoration: none; }

.hero {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 360px;
  min-height: 360px;
  background-color: rgba(0, 0, 0, 0.05); }

/* Default padding on all examples. */
section.example {
  margin: 24px;
  padding: 24px; }

section.example h2 {
  margin-left: 0; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-button {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 2.25rem;
  text-decoration: none;
  text-transform: uppercase;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  -webkit-tap-highlight-color: transparent;
  display: inline-block;
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  min-width: 64px;
  height: 36px;
  padding: 0 16px;
  border: none;
  outline: none;
  text-align: center;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
  overflow: hidden;
  vertical-align: middle;
  border-radius: 2px; }
  .mdc-button::before, .mdc-button::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: "";
    will-change: transform, opacity; }
  .mdc-button::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
  .mdc-button.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-button.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
            animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
  .mdc-button::before, .mdc-button::after {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%; }
  .mdc-button.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-button.mdc-ripple-upgraded--unbounded::before {
    top: var(--mdc-ripple-top, calc(50% - 50%));
    left: var(--mdc-ripple-left, calc(50% - 50%));
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-button.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
  .mdc-button:active {
    outline: none; }
  .mdc-button:hover {
    cursor: pointer; }
  .mdc-button::-moz-focus-inner {
    padding: 0;
    border: 0; }
  .mdc-button:disabled {
    background-color: transparent;
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
    cursor: default;
    pointer-events: none; }
    .mdc-button--theme-dark .mdc-button:disabled,
    .mdc-theme--dark .mdc-button:disabled {
      /* @alternate */
      color: rgba(255, 255, 255, 0.5);
      color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-button:not(:disabled) {
    background-color: transparent; }
  .mdc-button:not(:disabled) {
    /* @alternate */
    color: #212121;
    color: var(--mdc-theme-primary, #212121); }
  .mdc-button::before, .mdc-button::after {
    /* @alternate */
    background-color: #212121; }
    @supports not (-ms-ime-align: auto) {
      .mdc-button::before, .mdc-button::after {
        background-color: var(--mdc-theme-primary, #212121); } }
  .mdc-button:hover::before {
    opacity: 0.04; }
  .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.12; }
  .mdc-button:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
  .mdc-button:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.16; }
  .mdc-button.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }

.mdc-button--raised:disabled,
.mdc-button--unelevated:disabled {
  background-color: rgba(0, 0, 0, 0.12);
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
  .mdc-button--theme-dark .mdc-button--raised:disabled,
  .mdc-theme--dark .mdc-button--raised:disabled, .mdc-button--theme-dark
  .mdc-button--unelevated:disabled,
  .mdc-theme--dark
  .mdc-button--unelevated:disabled {
    background-color: rgba(255, 255, 255, 0.12);
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled) {
  /* @alternate */
  background-color: #212121; }
  @supports not (-ms-ime-align: auto) {
    .mdc-button--raised:not(:disabled),
    .mdc-button--unelevated:not(:disabled) {
      background-color: var(--mdc-theme-primary, #212121); } }

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled) {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-primary, white); }

.mdc-button--raised::before, .mdc-button--raised::after,
.mdc-button--unelevated::before,
.mdc-button--unelevated::after {
  /* @alternate */
  background-color: white; }
  @supports not (-ms-ime-align: auto) {
    .mdc-button--raised::before, .mdc-button--raised::after,
    .mdc-button--unelevated::before,
    .mdc-button--unelevated::after {
      background-color: var(--mdc-theme-text-primary-on-primary, white); } }

.mdc-button--raised:hover::before,
.mdc-button--unelevated:hover::before {
  opacity: 0.08; }

.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,
.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.24; }

.mdc-button--raised:not(.mdc-ripple-upgraded)::after,
.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {
  -webkit-transition: opacity 150ms linear;
  transition: opacity 150ms linear; }

.mdc-button--raised:not(.mdc-ripple-upgraded):active::after,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {
  -webkit-transition-duration: 75ms;
          transition-duration: 75ms;
  opacity: 0.32; }

.mdc-button--raised.mdc-ripple-upgraded,
.mdc-button--unelevated.mdc-ripple-upgraded {
  --mdc-ripple-fg-opacity: 0.32; }

.mdc-button--raised {
  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow; }
  .mdc-button--raised:hover, .mdc-button--raised:focus {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
  .mdc-button--raised:active {
    -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }
  .mdc-button--raised:disabled {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }

.mdc-button--stroked {
  border-style: solid;
  padding-right: 14px;
  padding-left: 14px;
  border-width: 2px;
  line-height: 32px; }
  .mdc-button--stroked:disabled {
    /* @alternate */
    border-color: rgba(0, 0, 0, 0.38);
    border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
    .mdc-button--theme-dark .mdc-button--stroked:disabled,
    .mdc-theme--dark .mdc-button--stroked:disabled {
      /* @alternate */
      border-color: rgba(255, 255, 255, 0.5);
      border-color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-button--stroked.mdc-button--dense {
    line-height: 27px; }
  .mdc-button--stroked.mdc-button--compact {
    padding-right: 6px;
    padding-left: 6px; }
  .mdc-button--stroked:not(:disabled) {
    /* @alternate */
    border-color: #212121;
    border-color: var(--mdc-theme-primary, #212121); }

.mdc-button--compact {
  padding: 0 8px; }

.mdc-button--dense {
  height: 32px;
  font-size: .8125rem;
  line-height: 32px; }

.mdc-button__icon {
  display: inline-block;
  width: 18px;
  height: 18px;
  margin-right: 8px;
  font-size: 18px;
  line-height: inherit;
  vertical-align: top; }

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
@-webkit-keyframes mdc-checkbox-unchecked-checked-checkmark-path {
  0%,
  50% {
    stroke-dashoffset: 29.78334; }
  50% {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
  100% {
    stroke-dashoffset: 0; } }
@keyframes mdc-checkbox-unchecked-checked-checkmark-path {
  0%,
  50% {
    stroke-dashoffset: 29.78334; }
  50% {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
  100% {
    stroke-dashoffset: 0; } }

@-webkit-keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {
  0%,
  68.2% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  68.2% {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);
            animation-timing-function: cubic-bezier(0, 0, 0, 1); }
  100% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {
  0%,
  68.2% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  68.2% {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);
            animation-timing-function: cubic-bezier(0, 0, 0, 1); }
  100% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes mdc-checkbox-checked-unchecked-checkmark-path {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
    opacity: 1;
    stroke-dashoffset: 0; }
  to {
    opacity: 0;
    stroke-dashoffset: -29.78334; } }

@keyframes mdc-checkbox-checked-unchecked-checkmark-path {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
    opacity: 1;
    stroke-dashoffset: 0; }
  to {
    opacity: 0;
    stroke-dashoffset: -29.78334; } }

@-webkit-keyframes mdc-checkbox-checked-indeterminate-checkmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; }
  to {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    opacity: 0; } }

@keyframes mdc-checkbox-checked-indeterminate-checkmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; }
  to {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    opacity: 0; } }

@-webkit-keyframes mdc-checkbox-indeterminate-checked-checkmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    opacity: 0; }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
    opacity: 1; } }

@keyframes mdc-checkbox-indeterminate-checked-checkmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    opacity: 0; }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
    opacity: 1; } }

@-webkit-keyframes mdc-checkbox-checked-indeterminate-mixedmark {
  from {
    -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;
            animation-timing-function: mdc-animation-deceleration-curve-timing-function;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
    opacity: 0; }
  to {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; } }

@keyframes mdc-checkbox-checked-indeterminate-mixedmark {
  from {
    -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;
            animation-timing-function: mdc-animation-deceleration-curve-timing-function;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
    opacity: 0; }
  to {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; } }

@-webkit-keyframes mdc-checkbox-indeterminate-checked-mixedmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; }
  to {
    -webkit-transform: rotate(315deg);
            transform: rotate(315deg);
    opacity: 0; } }

@keyframes mdc-checkbox-indeterminate-checked-mixedmark {
  from {
    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    opacity: 1; }
  to {
    -webkit-transform: rotate(315deg);
            transform: rotate(315deg);
    opacity: 0; } }

@-webkit-keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {
  0% {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    opacity: 1; }
  32.8%,
  100% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0);
    opacity: 0; } }

@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {
  0% {
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    opacity: 1; }
  32.8%,
  100% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0);
    opacity: 0; } }

.mdc-checkbox {
  display: inline-block;
  position: relative;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 18px;
          flex: 0 0 18px;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  width: 18px;
  height: 18px;
  padding: 11px;
  line-height: 0;
  white-space: nowrap;
  cursor: pointer;
  vertical-align: bottom;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  -webkit-tap-highlight-color: transparent; }
  .mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: rgba(0, 0, 0, 0.26); }
  .mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
  .mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background {
    border-color: transparent;
    background-color: rgba(0, 0, 0, 0.26); }
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: rgba(255, 255, 255, 0.3); }
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background {
    background-color: rgba(255, 255, 255, 0.3); }
  .mdc-checkbox .mdc-checkbox__checkmark__path {
    stroke: white !important; }
  .mdc-checkbox .mdc-checkbox__mixedmark {
    background-color: white; }
  .mdc-checkbox .mdc-checkbox__background::before {
    /* @alternate */
    background-color: #64dd17; }
    @supports not (-ms-ime-align: auto) {
      .mdc-checkbox .mdc-checkbox__background::before {
        background-color: var(--mdc-theme-secondary, #64dd17); } }
  .mdc-checkbox::before, .mdc-checkbox::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: "";
    will-change: transform, opacity; }
  .mdc-checkbox::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
  .mdc-checkbox.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-checkbox.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
  .mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
            animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
  .mdc-checkbox::before, .mdc-checkbox::after {
    /* @alternate */
    background-color: #64dd17; }
    @supports not (-ms-ime-align: auto) {
      .mdc-checkbox::before, .mdc-checkbox::after {
        background-color: var(--mdc-theme-secondary, #64dd17); } }
  .mdc-checkbox:hover::before {
    opacity: 0.08; }
  .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.24; }
  .mdc-checkbox:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
  .mdc-checkbox:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.32; }
  .mdc-checkbox.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.32; }
  .mdc-checkbox::before, .mdc-checkbox::after {
    top: calc(50% - 50%);
    left: calc(50% - 50%);
    width: 100%;
    height: 100%; }
  .mdc-checkbox.mdc-ripple-upgraded::before {
    top: calc(50% - 50%);
    left: calc(50% - 50%);
    width: 100%;
    height: 100%;
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-checkbox.mdc-ripple-upgraded--unbounded::before {
    top: var(--mdc-ripple-top, calc(50% - 25%));
    left: var(--mdc-ripple-left, calc(50% - 25%));
    width: var(--mdc-ripple-fg-size, 50%);
    height: var(--mdc-ripple-fg-size, 50%);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-checkbox.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 50%);
    height: var(--mdc-ripple-fg-size, 50%); }
  .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; }
  .mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
  .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }

@-webkit-keyframes mdc-checkbox-fade-in-background-0 {
  0% {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; }
  50% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); } }

@keyframes mdc-checkbox-fade-in-background-0 {
  0% {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; }
  50% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); } }

@-webkit-keyframes mdc-checkbox-fade-out-background-0 {
  0%,
  80% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }
  100% {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; } }

@keyframes mdc-checkbox-fade-out-background-0 {
  0%,
  80% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }
  100% {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; } }
  .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-in-background-0;
            animation-name: mdc-checkbox-fade-in-background-0; }
  .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-out-background-0;
            animation-name: mdc-checkbox-fade-out-background-0; }
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: white;
    background-color: transparent; }
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
  .mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }

@-webkit-keyframes mdc-checkbox-fade-in-background-1 {
  0% {
    border-color: white;
    background-color: transparent; }
  50% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); } }

@keyframes mdc-checkbox-fade-in-background-1 {
  0% {
    border-color: white;
    background-color: transparent; }
  50% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); } }

@-webkit-keyframes mdc-checkbox-fade-out-background-1 {
  0%,
  80% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }
  100% {
    border-color: white;
    background-color: transparent; } }

@keyframes mdc-checkbox-fade-out-background-1 {
  0%,
  80% {
    /* @alternate */
    border-color: #64dd17;
    border-color: var(--mdc-theme-secondary, #64dd17);
    /* @alternate */
    background-color: #64dd17;
    background-color: var(--mdc-theme-secondary, #64dd17); }
  100% {
    border-color: white;
    background-color: transparent; } }
  .mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-in-background-1;
            animation-name: mdc-checkbox-fade-in-background-1; }
  .mdc-checkbox--theme-dark.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
  .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-out-background-1;
            animation-name: mdc-checkbox-fade-out-background-1; }

.mdc-checkbox--disabled {
  cursor: default;
  pointer-events: none; }

.mdc-checkbox--upgraded .mdc-checkbox__background,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark__path,
.mdc-checkbox--upgraded .mdc-checkbox__mixedmark {
  -webkit-transition: none !important;
  transition: none !important; }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background, .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {
  -webkit-animation-duration: 180ms;
          animation-duration: 180ms;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear; }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark__path {
  -webkit-animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;
          animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark {
  -webkit-animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;
          animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark__path {
  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;
          animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark {
  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;
          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark {
  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;
          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark {
  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;
          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark {
  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;
          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark {
  -webkit-animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;
          animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;
  -webkit-transition: none;
  transition: none; }

.mdc-checkbox__background {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  left: 11px;
  right: initial;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  top: 11px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 45%;
  height: 45%;
  -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  border: 2px solid currentColor;
  border-radius: 2px;
  background-color: transparent;
  pointer-events: none;
  will-change: background-color, border-color; }
  [dir="rtl"] .mdc-checkbox .mdc-checkbox__background,
  .mdc-checkbox[dir="rtl"] .mdc-checkbox__background {
    left: initial;
    right: 11px; }
  .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
  .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background {
    -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1); }

.mdc-checkbox__background::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: scale(0, 0);
          transform: scale(0, 0);
  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  content: "";
  will-change: opacity, transform; }
  .mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before {
    -webkit-transform: scale(2.75, 2.75);
            transform: scale(2.75, 2.75);
    -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    opacity: 0.26; }
  .mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before {
    content: none; }

.mdc-checkbox__native-control {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  opacity: 0;
  cursor: inherit; }
  .mdc-checkbox__native-control:disabled {
    cursor: default;
    pointer-events: none; }

.mdc-checkbox__checkmark {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  opacity: 0; }
  .mdc-checkbox--upgraded .mdc-checkbox__checkmark {
    opacity: 1; }
  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark {
    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    opacity: 1; }
  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    opacity: 0; }

.mdc-checkbox__checkmark__path {
  -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  stroke-width: 3.12px;
  stroke-dashoffset: 29.78334;
  stroke-dasharray: 29.78334; }
  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path,
  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path {
    stroke-dashoffset: 0; }

.mdc-checkbox__mixedmark {
  width: 100%;
  height: 2px;
  -webkit-transform: scaleX(0) rotate(0deg);
          transform: scaleX(0) rotate(0deg);
  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  opacity: 0; }
  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {
    -webkit-transform: scaleX(1) rotate(-45deg);
            transform: scaleX(1) rotate(-45deg); }
  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {
    -webkit-transform: scaleX(1) rotate(0deg);
            transform: scaleX(1) rotate(0deg);
    opacity: 1; }

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* stylelint-disable selector-max-type */
.mdc-form-field {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  vertical-align: middle; }
  .mdc-form-field--theme-dark,
  .mdc-theme--dark .mdc-form-field {
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-dark, white); }
  .mdc-form-field > label {
    -webkit-box-ordinal-group: 1;
        -ms-flex-order: 0;
            order: 0;
    margin-right: auto;
    padding-left: 4px; }
  [dir="rtl"] .mdc-form-field > label, .mdc-form-field[dir="rtl"] > label {
    margin-left: auto;
    padding-right: 4px; }

.mdc-form-field--align-end > label {
  -webkit-box-ordinal-group: 0;
      -ms-flex-order: -1;
          order: -1;
  margin-left: auto;
  padding-right: 4px; }

[dir="rtl"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir="rtl"] > label {
  margin-right: auto;
  padding-left: 4px; }

/* stylelint-enable selector-max-type */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* postcss-bem-linter: define snackbar */
.mdc-snackbar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  bottom: 0;
  left: 50%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding-right: 24px;
  padding-left: 24px;
  -webkit-transform: translate(-50%, 100%);
          transform: translate(-50%, 100%);
  -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);
  transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);
  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);
  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);
  background-color: #323232;
  pointer-events: none;
  will-change: transform;
  /* stylelint-disable plugin/selector-bem-pattern */
  /* stylelint-enable plugin/selector-bem-pattern */ }
  .mdc-snackbar--theme-dark .mdc-snackbar,
  .mdc-theme--dark .mdc-snackbar {
    background-color: #fafafa; }
  @media (max-width: 599px) {
    .mdc-snackbar {
      left: 0;
      width: 100%;
      -webkit-transform: translate(0, 100%);
              transform: translate(0, 100%); } }
  @media (min-width: 600px) {
    .mdc-snackbar {
      min-width: 288px;
      max-width: 568px;
      border-radius: 2px; } }
  @media (min-width: 600px) {
    .mdc-snackbar--align-start {
      left: 24px;
      right: initial;
      bottom: 24px;
      -webkit-transform: translate(0, 200%);
              transform: translate(0, 200%); }
      [dir="rtl"] .mdc-snackbar--align-start, .mdc-snackbar--align-start[dir="rtl"] {
        left: initial;
        right: 24px; } }
  @media (max-width: 599px) {
    .mdc-snackbar--align-start {
      bottom: 0;
      left: 0;
      width: 100%;
      -webkit-transform: translate(0, 100%);
              transform: translate(0, 100%); } }
  .mdc-snackbar--active {
    -webkit-transform: translate(0);
            transform: translate(0);
    -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);
    pointer-events: auto; }
    .mdc-snackbar--active:not(.mdc-snackbar--align-start) {
      -webkit-transform: translate(-50%, 0);
              transform: translate(-50%, 0); }
      @media (max-width: 599px) {
        .mdc-snackbar--active:not(.mdc-snackbar--align-start) {
          bottom: 0;
          left: 0;
          width: 100%;
          -webkit-transform: translate(0);
                  transform: translate(0); } }
  .mdc-snackbar__action-wrapper {
    padding-left: 24px;
    padding-right: 0; }
    [dir="rtl"] .mdc-snackbar__action-wrapper, .mdc-snackbar__action-wrapper[dir="rtl"] {
      padding-left: 0;
      padding-right: 24px; }
  .mdc-snackbar--action-on-bottom {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
  .mdc-snackbar--action-on-bottom .mdc-snackbar__text {
    margin-right: inherit; }
  .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper {
    margin-left: auto;
    margin-right: 0;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    margin-top: -12px;
    margin-bottom: 8px; }
    [dir="rtl"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir="rtl"] {
      margin-left: 0;
      margin-right: auto; }
  .mdc-snackbar__text {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    line-height: 1.25rem;
    text-decoration: inherit;
    text-transform: inherit;
    margin-left: 0;
    margin-right: auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    height: 48px;
    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    opacity: 0;
    color: white; }
    [dir="rtl"] .mdc-snackbar .mdc-snackbar__text,
    .mdc-snackbar[dir="rtl"] .mdc-snackbar__text {
      margin-left: auto;
      margin-right: 0; }
    .mdc-snackbar--theme-dark .mdc-snackbar__text,
    .mdc-theme--dark .mdc-snackbar__text {
      /* @alternate */
      color: rgba(0, 0, 0, 0.87);
      color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
    @media (min-width: 600px) {
      .mdc-snackbar__text {
        padding-left: 0;
        padding-right: 24px; }
        [dir="rtl"] .mdc-snackbar__text, .mdc-snackbar__text[dir="rtl"] {
          padding-left: 24px;
          padding-right: 0; } }
  .mdc-snackbar--multiline .mdc-snackbar__text {
    height: 80px; }
  .mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text {
    margin: 0; }
  .mdc-snackbar__action-button {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    line-height: 2.25rem;
    text-decoration: none;
    text-transform: uppercase;
    /* @alternate */
    color: #64dd17;
    color: var(--mdc-theme-secondary, #64dd17);
    padding: 0;
    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    border: none;
    outline: none;
    background-color: transparent;
    opacity: 0;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    -webkit-appearance: none;
    visibility: hidden; }
    .mdc-snackbar--theme-dark .mdc-snackbar__action-button,
    .mdc-theme--dark .mdc-snackbar__action-button {
      /* @alternate */
      color: #212121;
      color: var(--mdc-theme-primary, #212121); }
    .mdc-snackbar__action-button:hover {
      cursor: pointer; }
    .mdc-snackbar__action-button::-moz-focus-inner {
      border: 0; }
    .mdc-snackbar__action-button:not([aria-hidden]) {
      visibility: inherit; }
  .mdc-snackbar--active .mdc-snackbar__text,
  .mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) {
    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);
    opacity: 1; }

/* postcss-bem-linter: end */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-text-field__bottom-line {
  /* @alternate */
  background-color: #212121;
  background-color: var(--mdc-theme-primary, #212121);
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  z-index: 2; }

.mdc-text-field__bottom-line--active {
  -webkit-transform: scaleX(1);
          transform: scaleX(1); }

.mdc-text-field .mdc-text-field__input:focus ~ .mdc-text-field__bottom-line {
  opacity: 1; }

.mdc-text-field-helper-text {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));
  margin: 0;
  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  font-size: .75rem;
  will-change: opacity; }
  .mdc-text-field-helper-text--theme-dark,
  .mdc-theme--dark .mdc-text-field-helper-text {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5);
    color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-text-field + .mdc-text-field-helper-text {
    margin-bottom: 8px; }

.mdc-text-field-helper-text--persistent {
  -webkit-transition: none;
  transition: none;
  opacity: 1;
  will-change: initial; }

@-webkit-keyframes invalid-shake-float-above-standard {
  0% {
    -webkit-transform: translateX(0) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-100%) scale(0.75, 0.75); }
  33% {
    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    -webkit-transform: translateX(10px) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(10px) translateY(-100%) scale(0.75, 0.75); }
  66% {
    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    -webkit-transform: translateX(-5px) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(-5px) translateY(-100%) scale(0.75, 0.75); }
  100% {
    -webkit-transform: translateX(0) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-100%) scale(0.75, 0.75); } }

@keyframes invalid-shake-float-above-standard {
  0% {
    -webkit-transform: translateX(0) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-100%) scale(0.75, 0.75); }
  33% {
    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    -webkit-transform: translateX(10px) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(10px) translateY(-100%) scale(0.75, 0.75); }
  66% {
    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    -webkit-transform: translateX(-5px) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(-5px) translateY(-100%) scale(0.75, 0.75); }
  100% {
    -webkit-transform: translateX(0) translateY(-100%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-100%) scale(0.75, 0.75); } }

@-webkit-keyframes invalid-shake-float-above-box {
  0% {
    -webkit-transform: translateX(0) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-50%) scale(0.75, 0.75); }
  33% {
    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    -webkit-transform: translateX(10px) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(10px) translateY(-50%) scale(0.75, 0.75); }
  66% {
    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    -webkit-transform: translateX(-5px) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(-5px) translateY(-50%) scale(0.75, 0.75); }
  100% {
    -webkit-transform: translateX(0) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-50%) scale(0.75, 0.75); } }

@keyframes invalid-shake-float-above-box {
  0% {
    -webkit-transform: translateX(0) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-50%) scale(0.75, 0.75); }
  33% {
    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    -webkit-transform: translateX(10px) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(10px) translateY(-50%) scale(0.75, 0.75); }
  66% {
    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    -webkit-transform: translateX(-5px) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(-5px) translateY(-50%) scale(0.75, 0.75); }
  100% {
    -webkit-transform: translateX(0) translateY(-50%) scale(0.75, 0.75);
            transform: translateX(0) translateY(-50%) scale(0.75, 0.75); } }

.mdc-text-field {
  display: inline-block;
  position: relative;
  margin-bottom: 8px;
  will-change: opacity, transform, color; }
  .mdc-text-field__input {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    letter-spacing: 0.04em;
    width: 100%;
    padding: 0 0 8px;
    -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
    border: none;
    border-bottom: 1px solid rgba(0, 0, 0, 0.5);
    background: none;
    font-size: inherit;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; }
    .mdc-text-field__input::-webkit-input-placeholder {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));
      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1; }
    .mdc-text-field__input::-moz-placeholder {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));
      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1; }
    .mdc-text-field__input:-ms-input-placeholder {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));
      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1; }
    .mdc-text-field__input::placeholder {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));
      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1; }
    .mdc-text-field__input:hover {
      border-color: black; }
    .mdc-text-field__input:focus {
      outline: none; }
      .mdc-text-field__input:focus::-webkit-input-placeholder {
        color: rgba(255, 255, 255, 0.3); }
      .mdc-text-field__input:focus::-moz-placeholder {
        color: rgba(255, 255, 255, 0.3); }
      .mdc-text-field__input:focus:-ms-input-placeholder {
        color: rgba(255, 255, 255, 0.3); }
      .mdc-text-field__input:focus::placeholder {
        color: rgba(255, 255, 255, 0.3); }
    .mdc-text-field__input:invalid {
      -webkit-box-shadow: none;
              box-shadow: none; }
    .mdc-text-field__input--theme-dark,
    .mdc-theme--dark .mdc-text-field__input {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white);
      border-bottom: 1px solid rgba(255, 255, 255, 0.5); }
      .mdc-text-field__input--theme-dark:hover,
      .mdc-theme--dark .mdc-text-field__input:hover {
        border-bottom: 1px solid white; }
      .mdc-text-field__input--theme-dark::-webkit-input-placeholder,
      .mdc-theme--dark .mdc-text-field__input::-webkit-input-placeholder {
        /* @alternate */
        color: rgba(255, 255, 255, 0.5);
        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
      .mdc-text-field__input--theme-dark::-moz-placeholder,
      .mdc-theme--dark .mdc-text-field__input::-moz-placeholder {
        /* @alternate */
        color: rgba(255, 255, 255, 0.5);
        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
      .mdc-text-field__input--theme-dark:-ms-input-placeholder,
      .mdc-theme--dark .mdc-text-field__input:-ms-input-placeholder {
        /* @alternate */
        color: rgba(255, 255, 255, 0.5);
        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
      .mdc-text-field__input--theme-dark::placeholder,
      .mdc-theme--dark .mdc-text-field__input::placeholder {
        /* @alternate */
        color: rgba(255, 255, 255, 0.5);
        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
      .mdc-text-field__input--theme-dark:focus::-webkit-input-placeholder,
      .mdc-theme--dark .mdc-text-field__input:focus::-webkit-input-placeholder {
        color: rgba(0, 0, 0, 0.38); }
      .mdc-text-field__input--theme-dark:focus::-moz-placeholder,
      .mdc-theme--dark .mdc-text-field__input:focus::-moz-placeholder {
        color: rgba(0, 0, 0, 0.38); }
      .mdc-text-field__input--theme-dark:focus:-ms-input-placeholder,
      .mdc-theme--dark .mdc-text-field__input:focus:-ms-input-placeholder {
        color: rgba(0, 0, 0, 0.38); }
      .mdc-text-field__input--theme-dark:focus::placeholder,
      .mdc-theme--dark .mdc-text-field__input:focus::placeholder {
        color: rgba(0, 0, 0, 0.38); }
  .mdc-text-field__label {
    position: absolute;
    bottom: 8px;
    left: 0;
    -webkit-transform-origin: left top;
            transform-origin: left top;
    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);
    color: rgba(0, 0, 0, 0.5);
    cursor: text; }
    [dir="rtl"] .mdc-text-field .mdc-text-field__label,
    .mdc-text-field[dir="rtl"] .mdc-text-field__label {
      right: 0;
      left: auto;
      -webkit-transform-origin: right top;
              transform-origin: right top; }
    .mdc-text-field--theme-dark .mdc-text-field__label,
    .mdc-theme--dark .mdc-text-field__label {
      color: rgba(255, 255, 255, 0.6); }
    .mdc-text-field__label--float-above {
      -webkit-transform: translateY(-100%) scale(0.75, 0.75);
              transform: translateY(-100%) scale(0.75, 0.75);
      cursor: auto; }

.mdc-text-field__input:-webkit-autofill + .mdc-text-field__label {
  -webkit-transform: translateY(-100%) scale(0.75, 0.75);
          transform: translateY(-100%) scale(0.75, 0.75);
  cursor: auto; }

.mdc-text-field--box {
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  -webkit-tap-highlight-color: transparent;
  border-radius: 4px 4px 0 0;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: relative;
  height: 56px;
  background-color: rgba(0, 0, 0, 0.04);
  overflow: hidden; }
  .mdc-text-field--box::before, .mdc-text-field--box::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: "";
    will-change: transform, opacity; }
  .mdc-text-field--box::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
  .mdc-text-field--box.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-text-field--box.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
  .mdc-text-field--box.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-text-field--box.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
            animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
  .mdc-text-field--box::before, .mdc-text-field--box::after {
    /* @alternate */
    background-color: rgba(0, 0, 0, 0.87); }
    @supports not (-ms-ime-align: auto) {
      .mdc-text-field--box::before, .mdc-text-field--box::after {
        background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); } }
  .mdc-text-field--box:hover::before {
    opacity: 0.04; }
  .mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field--box:not(.mdc-ripple-upgraded):focus-within::before, .mdc-text-field--box.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.12; }
  .mdc-text-field--box:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
  .mdc-text-field--box:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.16; }
  .mdc-text-field--box.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
  .mdc-text-field--box::before, .mdc-text-field--box::after {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%; }
  .mdc-text-field--box.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-text-field--box.mdc-ripple-upgraded--unbounded::before {
    top: var(--mdc-ripple-top, calc(50% - 50%));
    left: var(--mdc-ripple-left, calc(50% - 50%));
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-text-field--box.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
  .mdc-text-field--theme-dark.mdc-text-field--box,
  .mdc-theme--dark .mdc-text-field--box {
    background-color: rgba(255, 255, 255, 0.1); }
  .mdc-text-field--theme-dark.mdc-text-field--box::before, .mdc-text-field--theme-dark.mdc-text-field--box::after,
  .mdc-theme--dark .mdc-text-field--box::before,
  .mdc-theme--dark .mdc-text-field--box::after {
    /* @alternate */
    background-color: white; }
    @supports not (-ms-ime-align: auto) {
      .mdc-text-field--theme-dark.mdc-text-field--box::before, .mdc-text-field--theme-dark.mdc-text-field--box::after,
      .mdc-theme--dark .mdc-text-field--box::before,
      .mdc-theme--dark .mdc-text-field--box::after {
        background-color: var(--mdc-theme-text-primary-on-dark, white); } }
  .mdc-text-field--theme-dark.mdc-text-field--box:hover::before,
  .mdc-theme--dark .mdc-text-field--box:hover::before {
    opacity: 0.08; }
  .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):focus-within::before, .mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before,
  .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):focus-within::before,
  .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.24; }
  .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded)::after,
  .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
  .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):active::after,
  .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
            transition-duration: 75ms;
    opacity: 0.32; }
  .mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded,
  .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.32; }
  .mdc-text-field--box .mdc-text-field__input {
    -ms-flex-item-align: end;
        align-self: flex-end;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    height: 100%;
    padding: 20px 16px 0; }
  .mdc-text-field--box .mdc-text-field__label {
    left: 16px;
    right: initial;
    position: absolute;
    bottom: 20px;
    width: calc(100% - 48px);
    color: rgba(0, 0, 0, 0.6);
    text-overflow: ellipsis;
    white-space: nowrap;
    pointer-events: none;
    overflow: hidden;
    will-change: transform; }
    [dir="rtl"] .mdc-text-field--box .mdc-text-field__label, .mdc-text-field--box .mdc-text-field__label[dir="rtl"] {
      left: initial;
      right: 16px; }
    .mdc-text-field--theme-dark .mdc-text-field--box .mdc-text-field__label,
    .mdc-theme--dark .mdc-text-field--box .mdc-text-field__label {
      /* @alternate */
      color: rgba(255, 255, 255, 0.7);
      color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
    .mdc-text-field--box .mdc-text-field__label--float-above {
      -webkit-transform: translateY(-50%) scale(0.75, 0.75);
              transform: translateY(-50%) scale(0.75, 0.75); }
  .mdc-text-field--box .mdc-text-field__label--float-above.mdc-text-field__label--shake {
    -webkit-animation: invalid-shake-float-above-box 250ms 1;
            animation: invalid-shake-float-above-box 250ms 1; }
  .mdc-text-field--box.mdc-text-field--disabled {
    color: rgba(255, 255, 255, 0.3);
    border-bottom: none;
    background-color: rgba(0, 0, 0, 0.02); }
    .mdc-text-field--theme-dark.mdc-text-field--box.mdc-text-field--disabled,
    .mdc-theme--dark .mdc-text-field--box.mdc-text-field--disabled {
      background-color: #303030;
      color: rgba(0, 0, 0, 0.38);
      border-bottom: none; }
    .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__label {
      bottom: 20px; }
    .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon {
      color: rgba(0, 0, 0, 0.3); }
      .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon--theme-dark,
      .mdc-theme--dark .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon {
        color: rgba(255, 255, 255, 0.3); }
  .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__input {
    padding: 12px 12px 0; }
  .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label {
    left: 12px;
    right: initial;
    bottom: 20px; }
    [dir="rtl"] .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label, .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label[dir="rtl"] {
      left: initial;
      right: 12px; }
    .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label--float-above {
      -webkit-transform: translateY(calc(-75% - 2px)) scale(0.923, 0.923);
              transform: translateY(calc(-75% - 2px)) scale(0.923, 0.923); }

.mdc-text-field--with-leading-icon .mdc-text-field__icon,
.mdc-text-field--with-trailing-icon .mdc-text-field__icon {
  position: absolute;
  bottom: 16px;
  cursor: pointer; }
  .mdc-text-field--theme-dark .mdc-text-field--with-leading-icon .mdc-text-field__icon,
  .mdc-theme--dark .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--theme-dark
  .mdc-text-field--with-trailing-icon .mdc-text-field__icon,
  .mdc-theme--dark
  .mdc-text-field--with-trailing-icon .mdc-text-field__icon {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7);
    color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }

.mdc-text-field--with-leading-icon .mdc-text-field__input {
  padding-left: 48px;
  padding-right: 15px; }
  [dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__input, .mdc-text-field--with-leading-icon .mdc-text-field__input[dir="rtl"] {
    padding-left: 15px;
    padding-right: 48px; }

.mdc-text-field--with-leading-icon .mdc-text-field__icon {
  left: 15px;
  right: initial; }
  [dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--with-leading-icon .mdc-text-field__icon[dir="rtl"] {
    left: initial;
    right: 15px; }

.mdc-text-field--with-leading-icon .mdc-text-field__label {
  left: 48px;
  right: initial; }
  [dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__label, .mdc-text-field--with-leading-icon .mdc-text-field__label[dir="rtl"] {
    left: initial;
    right: 48px; }

.mdc-text-field--with-trailing-icon .mdc-text-field__input {
  padding-left: 15px;
  padding-right: 48px; }
  [dir="rtl"] .mdc-text-field--with-trailing-icon .mdc-text-field__input, .mdc-text-field--with-trailing-icon .mdc-text-field__input[dir="rtl"] {
    padding-left: 48px;
    padding-right: 15px; }

.mdc-text-field--with-trailing-icon .mdc-text-field__icon {
  left: initial;
  right: 15px; }
  [dir="rtl"] .mdc-text-field--with-trailing-icon .mdc-text-field__icon, .mdc-text-field--with-trailing-icon .mdc-text-field__icon[dir="rtl"] {
    left: 15px;
    right: initial; }

.mdc-text-field__icon:not([tabindex]),
.mdc-text-field__icon[tabindex="-1"] {
  cursor: default;
  pointer-events: none; }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon,
.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {
  bottom: 16px;
  -webkit-transform: scale(0.8);
          transform: scale(0.8); }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input {
  padding-left: 38px;
  padding-right: 12px; }
  [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input[dir="rtl"] {
    padding-left: 12px;
    padding-right: 38px; }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon {
  left: 12px;
  right: initial; }
  [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon[dir="rtl"] {
    left: initial;
    right: 12px; }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label {
  left: 38px;
  right: initial; }
  [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label[dir="rtl"] {
    left: initial;
    right: 38px; }

.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input {
  padding-left: 12px;
  padding-right: 38px; }
  [dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input[dir="rtl"] {
    padding-left: 38px;
    padding-right: 12px; }

.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {
  left: initial;
  right: 12px; }
  [dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon[dir="rtl"] {
    left: 12px;
    right: initial; }

.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: relative;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin-top: 16px; }
  .mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box):not(.mdc-text-field--textarea) {
    height: 48px; }
  .mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) .mdc-text-field__label {
    pointer-events: none; }

.mdc-text-field--invalid .mdc-text-field__label {
  color: #d50000; }

.mdc-text-field--invalid .mdc-text-field__input {
  border-color: #d50000; }

.mdc-text-field--invalid .mdc-text-field__bottom-line {
  background-color: #d50000; }

.mdc-text-field--invalid.mdc-text-field--textarea {
  border-color: #d50000; }

.mdc-text-field__label--float-above.mdc-text-field__label--shake {
  -webkit-animation: invalid-shake-float-above-standard 250ms 1;
          animation: invalid-shake-float-above-standard 250ms 1; }

.mdc-text-field--dense {
  margin-top: 12px;
  margin-bottom: 4px;
  font-size: .813rem; }
  .mdc-text-field--dense .mdc-text-field__label--float-above {
    -webkit-transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923);
            transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923); }

.mdc-text-field--disabled {
  pointer-events: none; }
  .mdc-text-field--disabled .mdc-text-field__input {
    border-bottom: 1px dotted rgba(35, 31, 32, 0.26); }
    .mdc-text-field--theme-dark.mdc-text-field--disabled .mdc-text-field__input,
    .mdc-theme--dark .mdc-text-field--disabled .mdc-text-field__input {
      border-bottom: 1px dotted rgba(255, 255, 255, 0.3); }
  .mdc-text-field--disabled .mdc-text-field__input,
  .mdc-text-field--disabled .mdc-text-field__label,
  .mdc-text-field--disabled + .mdc-text-field-helper-text {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
  .mdc-text-field--theme-dark .mdc-text-field--disabled .mdc-text-field__input,
  .mdc-theme--dark .mdc-text-field--disabled .mdc-text-field__input, .mdc-text-field--theme-dark
  .mdc-text-field--disabled .mdc-text-field__label,
  .mdc-theme--dark
  .mdc-text-field--disabled .mdc-text-field__label {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5);
    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-text-field--theme-dark.mdc-text-field--disabled + .mdc-text-field-helper-text,
  .mdc-theme--dark .mdc-text-field--disabled + .mdc-text-field-helper-text {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5);
    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-text-field--disabled .mdc-text-field__label {
    bottom: 8px;
    cursor: default; }

.mdc-text-field__input:required + .mdc-text-field__label::after {
  margin-left: 1px;
  content: "*"; }
  .mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after {
    color: #d50000; }
    .mdc-text-field--theme-dark.mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after,
    .mdc-theme--dark .mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after {
      color: #ff6e6e; }

.mdc-text-field--textarea {
  border-radius: 4px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: initial;
  -webkit-transition: none;
  transition: none;
  border: 1px solid rgba(0, 0, 0, 0.73);
  overflow: hidden; }
  .mdc-text-field--textarea .mdc-text-field__label {
    border-radius: 4px 4px 0 0; }
  .mdc-text-field--textarea .mdc-text-field__input {
    border-radius: 2px; }
  .mdc-text-field--theme-dark .mdc-text-field--textarea,
  .mdc-theme--dark .mdc-text-field--textarea {
    border-color: white; }
  .mdc-text-field--textarea .mdc-text-field__input {
    padding: 16px;
    padding-top: 32px;
    border: 1px solid transparent; }
    .mdc-text-field--textarea .mdc-text-field__input:focus {
      /* @alternate */
      border-color: #212121;
      border-color: var(--mdc-theme-primary, #212121); }
    .mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus) {
      border-color: #d50000; }
    .mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:hover,
    .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:hover {
      border-bottom-color: transparent; }
    .mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:focus,
    .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:focus {
      /* @alternate */
      border-color: #64dd17;
      border-color: var(--mdc-theme-secondary, #64dd17); }
    .mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus),
    .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus) {
      border-color: #ff6e6e; }
  .mdc-text-field--textarea .mdc-text-field__label {
    left: 1px;
    right: initial;
    top: 18px;
    bottom: auto;
    padding: 8px 16px;
    background-color: white; }
    [dir="rtl"] .mdc-text-field--textarea .mdc-text-field__label, .mdc-text-field--textarea .mdc-text-field__label[dir="rtl"] {
      left: initial;
      right: 1px; }
    .mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__label,
    .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__label {
      background-color: #303030; }
    .mdc-text-field--textarea .mdc-text-field__label--float-above {
      -webkit-transform: translateY(-50%) scale(0.923, 0.923);
              transform: translateY(-50%) scale(0.923, 0.923); }
  .mdc-text-field--textarea.mdc-text-field--disabled {
    border-style: solid;
    border-color: rgba(35, 31, 32, 0.26);
    background-color: #f9f9f9; }
    .mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled,
    .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled {
      border-color: rgba(255, 255, 255, 0.3);
      background-color: #2f2f2f; }
    .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label {
      background-color: #f9f9f9; }
      .mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label,
      .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label {
        background-color: #2f2f2f; }
  .mdc-text-field--textarea:not(.mdc-text-field--upgraded) .mdc-text-field__input {
    padding-top: 16px; }

.mdc-text-field--textarea.mdc-text-field--focused {
  /* @alternate */
  border-color: #212121;
  border-color: var(--mdc-theme-primary, #212121); }

.mdc-text-field--fullwidth {
  width: 100%; }
  .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) {
    display: block;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    height: 56px;
    margin: 0;
    border: none;
    border-bottom: 1px solid rgba(0, 0, 0, 0.12);
    outline: none; }
    .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__input {
      width: 100%;
      height: 100%;
      padding: 0;
      resize: none;
      border: none !important; }
  .mdc-text-field--fullwidth--theme-dark,
  .mdc-theme--dark .mdc-text-field--fullwidth {
    border-bottom: 1px solid rgba(255, 255, 255, 0.12); }

.mdc-text-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) .mdc-text-field__input {
  -webkit-transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1);
  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }

.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:focus {
  /* @alternate */
  border-color: #212121;
  border-color: var(--mdc-theme-primary, #212121); }

.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled {
  color: rgba(0, 0, 0, 0.38);
  border-bottom-style: dotted; }

.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus) {
  border-color: #d50000; }

.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:not(:focus),
.mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:not(:focus) {
  border-color: rgba(255, 255, 255, 0.12); }

.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled,
.mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled {
  color: rgba(0, 0, 0, 0.38);
  border-color: rgba(255, 255, 255, 0.3);
  background-color: #2f2f2f; }

.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus),
.mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus) {
  border-color: #ff6e6e; }

.mdc-text-field--box:not(.mdc-text-field--upgraded) {
  height: 56px; }
  .mdc-text-field--box:not(.mdc-text-field--upgraded)::before, .mdc-text-field--box:not(.mdc-text-field--upgraded)::after {
    border-radius: 0; }
  .mdc-text-field--box:not(.mdc-text-field--upgraded) .mdc-text-field__input {
    padding-top: 0; }

.mdc-text-field--dense + .mdc-text-field-helper-text {
  margin-bottom: 4px; }

.mdc-text-field--focused + .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {
  opacity: 1; }

.mdc-text-field--box + .mdc-text-field-helper-text {
  margin-right: 16px;
  margin-left: 16px; }

.mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {
  opacity: 1;
  color: #d50000; }

.mdc-text-field--theme-dark.mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg,
.mdc-theme--dark .mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {
  color: #ff6e6e; }

.mdc-form-field > .mdc-text-field + label {
  -ms-flex-item-align: start;
      align-self: flex-start; }

/*# sourceMappingURL=data:application/json;base64, */